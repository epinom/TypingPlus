/** * ... * XMLParser * Parseador de un fichero XML. * Segun la aplicacion en cuestion, se utiliza para convertir un fichero XML de configuracion, en objetos contenedores de datos (VOs) *  * @author Ernesto Pino Martínez * @date 12/09/2010 */package com.epinom.typingplus.utils{	import com.epinom.typingplus.vos.TPAuthorVO;	import com.epinom.typingplus.vos.TPComponentVO;	import com.epinom.typingplus.vos.TPOwnerVO;	import com.epinom.typingplus.vos.TPResolutionVO;	import com.epinom.typingplus.vos.TPSettingsVO;	import com.epinom.typingplus.vos.TPSoundVO;		public class TPXMLParser	{		public function TPXMLParser() {}				public static function parseSettingsXML(settingsXML:XML, currentSettings:TPSettingsVO = null):TPSettingsVO		{			trace("TPXMLParser->parseSettingsXML()");			//trace("XML: ", settingsXML);						// Instanciando objeto de datos para configuracion			var settings:TPSettingsVO = currentSettings ? currentSettings : new TPSettingsVO();						// Almacenando valores obtenidos del fichero de configuracion			settings.appName = String(settingsXML.appName);			settings.version = String(settingsXML.version);							// Creando objeto de datos y almacenando valores			var author:TPAuthorVO = new TPAuthorVO();			author.name = String(settingsXML.author.name);			author.lastname = String(settingsXML.author.lastname);			author.alias = String(settingsXML.author.alias);			author.email = String(settingsXML.author.email);			author.web = String(settingsXML.author.web);						// Asignando objeto de datos al objeto de configuracion principal			settings.author = author;						// Creando objeto de datos y almacenando valores			var owner:TPOwnerVO = new TPOwnerVO();			owner.name = String(settingsXML.owner.name);			owner.web = String(settingsXML.owner.web);						// Asignando objeto de datos al objeto de configuracion principal			settings.owner = owner;						// Creando objeto de datos y almacenando valores			var resolution:TPResolutionVO = new TPResolutionVO();			resolution.width = Number(settingsXML.resolution.@width);			resolution.height = Number(settingsXML.resolution.@height);						// Asignando objeto de datos al objeto de configuracion principal			settings.resolution = resolution;						// Recorriendo componentes en fichero de configuracion y contruyendo objetos de datos 			var componentXMLList:XMLList = settingsXML.components;			for each(var c:XML in componentXMLList.elements())			{				// Creando objeto de datos y almacenando valores				var component:TPComponentVO = new TPComponentVO();				component.type = String(c.type);				component.className = String(c.className);				component.instanceName = String(c.instanceName);				component.visible = TPStringUtils.stringToBoolean(c.visible);				component.hashId = String(c.hashId);				component.url = String(c.url);				component.changeSize = TPStringUtils.stringToBoolean(c.changeSize);				component.percentageWidth = Number(c.percentageWidth);				component.percentageHeight = Number(c.percentageHeight);				component.changePositionX = TPStringUtils.stringToBoolean(c.changePositionX);				component.changePositionY = TPStringUtils.stringToBoolean(c.changePositionY);				component.percentageX = Number(c.percentageX);				component.percentageY = Number(c.percentageY);				component.centralReference = TPStringUtils.stringToBoolean(c.centralReference);				component.elementOrder = Number(c.elementOrder);				component.yPosition = Number(c.yPosition);				component.percentagePadding = TPStringUtils.stringToBoolean(c.percentagePadding);				component.paddingTop = Number(c.paddingTop);				component.paddingBottom = Number(c.paddingBottom);				component.paddingLeft = Number(c.paddingLeft);				component.paddingRight = Number(c.paddingRight);								// Adicionando objeto de datos a la lista de componentes del objeto de configuracion principal				settings.componentVOList.push(component);			}						return settings;			}	}}